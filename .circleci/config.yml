
version: 2

workflows:
  version: 2

  main:
    jobs:

      - build_app:
          filters:
            tags:
              only:
                - /.*/

      - test_app:
          filters:
            tags:
              only:
                - /.*/

      - deploy_dev:
          requires:
            - test_app
            - build_app
          filters:
            branches:
              only:
                - stable
                - /^jeffo.*/

      - deploy_staging:
          requires:
            - test_app
            - build_app
          filters:
            branches:
              only:
                - stable

      - deploy_prod:
          requires:
            - test_app
            - build_app
          filters:
            tags:
              only:
                - /^release-.*/
            branches:
              ignore:
                - /.*/

aliases:

  - &docker
      - image: circleci/python:3.7

  - &deploy
    machine:
      image: circleci/classic:latest
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: setup global environment
          command: |
            echo 'export DEPLOY_ENV_FILE=$BASH_ENV' >> $BASH_ENV
            #
            echo 'export DEPLOY_AWS_ACCOUNT_KEY=DEPLOY_AWS_ACCOUNT_$ENV_SUFFIX' >> $BASH_ENV
            echo 'export DEPLOY_AWS_ACCOUNT=${!DEPLOY_AWS_ACCOUNT_KEY}' >> $BASH_ENV
            #
            echo 'export DEPLOY_LAMBDA_FUNCTION_NAME="ecstatic"' >> $BASH_ENV
            echo 'export DEPLOY_LAMBDA_FUNCTION_ROLE="ecstatic_lambda"' >> $BASH_ENV
            echo 'export DEPLOY_LAMBDA_FUNCTION_RUNTIME="python3.7"' >> $BASH_ENV
            echo 'export DEPLOY_LAMBDA_FUNCTION_TIMEOUT=120' >> $BASH_ENV
            echo 'export DEPLOY_LAMBDA_FUNCTION_MEMORY_SIZE=128' >> $BASH_ENV
            echo 'export DEPLOY_LAMBDA_FUNCTION_ENV_TEMPLATE="/tmp/workspace/environment.txt"' >> $BASH_ENV
            echo 'export DEPLOY_LAMBDA_SOURCE_DIR="/tmp/workspace/build"' >> $BASH_ENV
            #
            echo 'export ECSTATIC_LOG_LEVEL=${ECSTATIC_LOG_LEVEL:-DEBUG}' >> $BASH_ENV

      - run:
          name: install deployables
          command: |
            npm install -g https://github.com/firstlookmedia/deployables
      - run:
          name: deploy lambda
          command: |
            $( npm bin -g)/deployables lambda_deploy

#
# jobs
#
jobs:

  # test
  test_app:
    docker: *docker
    steps:
      - checkout
      - run:
          name: check requirements
          command: |
            virtualenv venv
            source venv/bin/activate
            pip install -r requirements.txt
      - run:
          name: check syntax
          command: |
            python -m py_compile *.py
      - run:
          name: run pyline
          command: |
            pip install pylint
            pylint ./*.py || true

  # build
  build_app:
    docker: *docker
    steps:
      - checkout
      - run:
          name: build app
          command: |
            mkdir ./build
            cp ./environment.txt ./build
            cp ./*.py ./build
            pip install -r requirements.txt --target=./build
      - persist_to_workspace:
          root: ~/project
          paths:
            - ./build

  # dev
  deploy_dev:
    environment:
      ENV_SUFFIX: "DEV"
    <<: *deploy

  # staging
  deploy_staging:
    environment:
      ENV_SUFFIX: "STAGING"
    <<: *deploy

  # prod
  deploy_prod:
    environment:
      ENV_SUFFIX: "PROD"
      ECSTATIC_LOG_LEVEL: "INFO"
    <<: *deploy
